// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.

/** Test program for the OS Math class. */
class Main {

    // Performs various mathematical operations, using calls to the Math class methods.
    function void main() {
        var Array r;    // Stores the test results;  

do Output.printInt(Math.sqrt(32767));
        do Output.printString(" ");

      do Output.printInt(Math.sqrt(100));
        do Output.printString(" ");
      do Output.printInt(Math.sqrt(256));

        do Output.printString(" ");
      do Output.printInt(Math.sqrt(10000));
          
          /*

        do Output.printInt(10*3);
        do Output.printString(" ");
        do Output.printInt(Math.multiply(100, 4));

        do Output.printString(" ");
        do Output.printInt(Math.multiply(35, -1));
        do Output.printString(" ");
        do Output.printInt(Math.multiply(-1, 35));
        do Output.printString(" ");
        do Output.printInt(Math.multiply(35, -42));
        do Output.printString(" ");
        do Output.printInt(Math.multiply(-42, 35));
        do Output.printString(" ");
do Output.printInt(Math.multiply(-3, -3));
        do Output.printInt(10/3);
        do Output.println();
        do Output.printInt(9/3);
        do Output.println();
        do Output.printInt(-3/3);
        do Output.println();
        do Output.printInt(100/3);
        do Output.println();
        do Output.printInt(6/3);
        do Output.println(); */

        let r = 8000;   // Base address
    
        let r[0] = 2 * 3;                  // 6
        let r[1] = r[0] * (-30);           // 6 * (-30) = -180
        let r[2] = r[1] * 100;             // (-180) * 100 = -18000
        let r[3] = 1 * r[2];               // 1 * (-18000) = -18000
        let r[4] = r[3] * 0;               // 0
        
        let r[5] = 9 / 3;                  // 3
        let r[6] = (-18000) / 6;           // -3000
        let r[7] = 32766 / (-32767);       // (2^15 - 2) / (2^15 - 1) = 0
        
        let r[8] = Math.sqrt(9);           // 3
        let r[9] = Math.sqrt(32767);       // 181
        
        let r[10] = Math.min(345, 123);    // 123
        let r[11] = Math.max(123, -345);   // 123
        let r[12] = Math.abs(27);          // 27
        let r[13] = Math.abs(-32767);      // 32767
        
        return;
    }
}