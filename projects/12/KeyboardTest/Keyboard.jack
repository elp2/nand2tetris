// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char key;
        var char ret;
        while (true) {
            let ret = Memory.peek(24576);
            if (ret > 0) {
                while (true) {
                    let key = Memory.peek(24576);
                    if (key = 0) {
                        if (~(ret = 129)) {
                            do Output.printChar(ret);
                        }
                        return ret;
                    }
                }
            }
        }
        return 0;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String input, ret;
        var int i;
        var char key;

        do Output.printString(message);
        
        let input = String.new(100);
        while (true) {
            let key = Keyboard.readChar();
            if (key = 129) { // Backspace.
                if (input.length() > 0) {
                    do Output.backSpace();
                    do input.eraseLastChar(); 
                }
            }
            else {
                if (key = 128) { // Newline.
                    let i = 0;
                    let ret = String.new(input.length());
                    while (i < input.length()) {
                        let ret = ret.appendChar(input.charAt(i));
                        let i = i + 1;
                    }
                    do input.dispose();
                    return ret;
                } else {
                    let input = input.appendChar(key);
                }
            }
        }
        return 0;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String input;
        var int ret;
        let input = Keyboard.readLine(message);
        let ret = input.intValue();
        do input.dispose();
        return ret;
    }
}
