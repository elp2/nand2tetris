// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux4Way(in= in, sel[0] = sel[0], sel[1]=sel[1], a= sel0a, b= sel0b, c= sel0c, d= sel0d);
    Not(in= sel[2], out= notsel2);
    And(a=sel0a, b=notsel2, out=a);
    And(a=sel0b, b=notsel2, out=b);
    And(a=sel0c, b=notsel2, out=c);
    And(a=sel0d, b=notsel2, out=d);

    And(a=sel0a, b=sel[2], out=e);
    And(a=sel0b, b=sel[2], out=f);
    And(a=sel0c, b=sel[2], out=g);
    And(a=sel0d, b=sel[2], out=h);
}
