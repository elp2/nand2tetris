class Cactus {

    field int x, y;
    field Random random;


    constructor Cactus new(int px, int py, Random prandom) {
        let x = px;
        let y = py;
        let random = prandom;
        return this;
    }

    function int dimension() {
        return 16;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void move(int dx, int dy) {
        let x = x + dx;
        if (x < 0) {
            let x = 31 + random.next(7);
        }
        let y = y + dy;
        return;
    }

    method int screenLocation() {
        return 16384 + (x + (y * 32));
    }

    method int getX() {
        return x;
    }
    method int getY() {
        return y;
    }

    method void draw() {
        var int memAddress;

        if (x > 31) {
            return;
        }
        let memAddress = screenLocation();

        do Memory.poke(memAddress, -1585);
        do Memory.poke(memAddress +32, -30359);
        do Memory.poke(memAddress +64, -30359);
        do Memory.poke(memAddress +96, -30423);
        do Memory.poke(memAddress +128, -30423);
        do Memory.poke(memAddress +160, -30423);
        do Memory.poke(memAddress +192, -28871);
        do Memory.poke(memAddress +224, -32767);
        do Memory.poke(memAddress +256, -32223);
        do Memory.poke(memAddress +288, -32223);
        do Memory.poke(memAddress +320, -32223);
        do Memory.poke(memAddress +352, -449);
        do Memory.poke(memAddress +384, 1072);
        do Memory.poke(memAddress +416, 1040);
        do Memory.poke(memAddress +448, 2032);
        return;
    }
}