// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:

    Inc16(in= regOut, out= regInc);

    // * else              out(t+1) = out(t)
    // * else if inc(t):   out(t+1) = out(t) + 1
    Mux16(a= regOut, b= regInc, sel= inc, out= incOrStay);

    // * else if load(t):  out(t+1) = in(t)
    Mux16(a= incOrStay, b= in, sel = load, out= incOrStayOrLoad);

    // * if      reset(t): out(t+1) = 0
    Mux16(a= incOrStayOrLoad, b[0..15] = false /* reset */, sel= reset, out = muxOut);


    Or(a= load, b= inc, out= incOrLoad);
    Or(a= incOrLoad, b= reset, out= incOrLoadOrReset);

    Register(in= muxOut, load= incOrLoadOrReset, out= regOut, out= out);
}
